version: 2.1

orbs:
  docker: circleci/docker@2.2.0
  cli: digitalocean/cli@0.1.1

executors:
  docker:
    environment:
      DOCKER_HUB_USERNAME: $DOCKER_HUB_USERNAME
      DOCKER_HUB_PASSWORD: $DOCKER_HUB_PASSWORD
    docker:
      - image: docker:stable
      
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    executor: docker
    steps:
      - checkout      
      - run:
          name: Restore dependencies
          command: dotnet restore
      - run:
          name: Build and test
          command: |
            dotnet build
            dotnet test
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install Docker Compose
          environment:
              COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Publish and create Docker image
          command: |
            dotnet publish -c Release -o out
            docker build -t visualbam/withbruce-project:latest .
      - run:
          name: Push Docker Image
          command: |
            docker login -u DOCKER_HUB_USERNAME -p DOCKER_HUB_PASSWORD
            docker push visualbam/withbruce-project:latest
      - run:
          command: >
            install () {
              # Set sudo to work whether logged in as root user or non-root user
              if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi

              $SUDO rm -rf /var/lib/apt/lists/*

              if [[ $(command -v curl) == "" ]]; then
                $SUDO apt-get update && \
                  $SUDO apt-get -y install curl
              fi

              if [[ $(command -v jq) == "" ]]; then
                $SUDO apt-get update && \
                  $SUDO apt-get -y install jq
              fi

              # Get latest download link
              export LATEST_DOWNLOAD_LINK=$(curl --silent \
                "https://api.github.com/repos/digitalocean/doctl/releases/latest" | \
                  jq -r '.assets[] | select(.name|test(".*-linux-amd64.tar.gz")).browser_download_url')

              # Downlaod latest package
              curl -sL $LATEST_DOWNLOAD_LINK | tar -xzv -C /tmp

              # Install
              $SUDO mv /tmp/doctl /usr/local/bin
              $SUDO chmod +x /usr/local/bin/doctl
            }


            if [[ $(command -v doctl) == "" ]]; then
              install
            else
              echo "doctl is already installed."
            fi


            echo "Success! doctl has been installed; displaying version
            information:"

            doctl version
          name: 'Install latest doctl version, if not available'
      - run:
          command: |
            doctl auth init -t $DIGITALOCEAN_ACCESS_TOKEN
          name: Initialize doctl
      - run:
          command: |
            docker pull visualbam/withbruce-project:latest
            docker-compose down
            docker-compose up -d --build
          
